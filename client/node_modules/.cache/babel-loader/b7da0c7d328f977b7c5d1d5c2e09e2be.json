{"ast":null,"code":"var _jsxFileName = \"/Users/lauraschultz/Documents/projects/yelp-restaurant-chooser/client/src/CopySessionUrl.tsx\";\nimport { faClipboard } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport React, { useRef, useState } from \"react\";\nimport { useLocation } from \"react-router-dom\";\n\nconst CopySessionUrl = ({\n  inputThemes,\n  buttonThemes,\n  buttonShadowColor\n}) => {\n  let appLoc = useLocation();\n  let copyTextRef = useRef(null);\n  let [copied, setCopied] = useState(false);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"w-max-content text-sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 12\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    ref: copyTextRef,\n    readOnly: true,\n    className: \"border rounded-l py-1 pl-2 w-32 overflow-hidden focus:outline-none \" + inputThemes,\n    value: process.env.PUBLIC_URL + appLoc.pathname,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 5\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    \"aria-label\": copied ? \"Copied!\" : \"Copy to clipboard\",\n    \"data-balloon-pos\": \"up\",\n    className: `rounded-r py-1 px-2 border ${buttonThemes}`,\n    style: {\n      boxShadow: `${buttonShadowColor} -5px 0 8px`\n    },\n    onClick: e => {\n      var _copyTextRef$current;\n\n      (_copyTextRef$current = copyTextRef.current) === null || _copyTextRef$current === void 0 ? void 0 : _copyTextRef$current.select();\n      document.execCommand(\"copy\");\n      setCopied(true);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faClipboard,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }\n  })));\n};\n\nexport default CopySessionUrl;","map":{"version":3,"sources":["/Users/lauraschultz/Documents/projects/yelp-restaurant-chooser/client/src/CopySessionUrl.tsx"],"names":["faClipboard","FontAwesomeIcon","React","useRef","useState","useLocation","CopySessionUrl","inputThemes","buttonThemes","buttonShadowColor","appLoc","copyTextRef","copied","setCopied","process","env","PUBLIC_URL","pathname","boxShadow","e","current","select","document","execCommand"],"mappings":";AAAA,SAASA,WAAT,QAA4B,mCAA5B;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,OAAOC,KAAP,IAAgBC,MAAhB,EAAwBC,QAAxB,QAAwC,OAAxC;AACA,SAASC,WAAT,QAA4B,kBAA5B;;AAEA,MAAMC,cAA8F,GACpG,CAAC;AAACC,EAAAA,WAAD;AAAcC,EAAAA,YAAd;AAA4BC,EAAAA;AAA5B,CAAD,KAAoD;AAChD,MAAIC,MAAM,GAAGL,WAAW,EAAxB;AACF,MAAIM,WAAW,GAAGR,MAAM,CAAmB,IAAnB,CAAxB;AACA,MAAI,CAACS,MAAD,EAASC,SAAT,IAAsBT,QAAQ,CAAC,KAAD,CAAlC;AAEE,sBAAO;AAAK,IAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACP;AACE,IAAA,IAAI,EAAC,MADP;AAEE,IAAA,GAAG,EAAEO,WAFP;AAGE,IAAA,QAAQ,MAHV;AAIE,IAAA,SAAS,EAAE,wEAAwEJ,WAJrF;AAKE,IAAA,KAAK,EAAEO,OAAO,CAACC,GAAR,CAAYC,UAAZ,GAAyBN,MAAM,CAACO,QALzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADO,eAQP;AACA,kBAAYL,MAAM,GAAE,SAAF,GAAc,mBADhC;AAEA,wBAAiB,IAFjB;AAGE,IAAA,SAAS,EAAG,8BAA6BJ,YAAa,EAHxD;AAIE,IAAA,KAAK,EAAE;AACHU,MAAAA,SAAS,EAAG,GAAET,iBAAkB;AAD7B,KAJT;AAOE,IAAA,OAAO,EAAGU,CAAD,IAAO;AAAA;;AACd,8BAAAR,WAAW,CAACS,OAAZ,8EAAqBC,MAArB;AACAC,MAAAA,QAAQ,CAACC,WAAT,CAAqB,MAArB;AACAV,MAAAA,SAAS,CAAC,IAAD,CAAT;AACD,KAXH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAaE,oBAAC,eAAD;AAAiB,IAAA,IAAI,EAAEb,WAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAbF,CARO,CAAP;AAwBH,CA9BD;;AAgCA,eAAeM,cAAf","sourcesContent":["import { faClipboard } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport React, { useRef, useState } from \"react\";\nimport { useLocation } from \"react-router-dom\";\n\nconst CopySessionUrl:React.FC<{inputThemes: string, buttonThemes:string, buttonShadowColor: string}> =\n({inputThemes, buttonThemes, buttonShadowColor}) => {\n    let appLoc = useLocation();\n  let copyTextRef = useRef<HTMLInputElement>(null);\n  let [copied, setCopied] = useState(false)\n  \n    return <div className=\"w-max-content text-sm\">\n    <input\n      type=\"text\"\n      ref={copyTextRef}\n      readOnly\n      className={\"border rounded-l py-1 pl-2 w-32 overflow-hidden focus:outline-none \" + inputThemes}\n      value={process.env.PUBLIC_URL + appLoc.pathname}\n    />\n    <button\n    aria-label={copied? \"Copied!\" : \"Copy to clipboard\"}\n    data-balloon-pos=\"up\"\n      className={`rounded-r py-1 px-2 border ${buttonThemes}`}\n      style={{\n          boxShadow: `${buttonShadowColor} -5px 0 8px`\n      }}\n      onClick={(e) => {\n        copyTextRef.current?.select();\n        document.execCommand(\"copy\");\n        setCopied(true)\n      }}\n    >\n      <FontAwesomeIcon icon={faClipboard} />\n    </button>\n  </div>\n}\n\nexport default CopySessionUrl;"]},"metadata":{},"sourceType":"module"}