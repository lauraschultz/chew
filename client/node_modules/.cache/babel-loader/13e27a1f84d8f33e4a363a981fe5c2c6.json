{"ast":null,"code":"var _jsxFileName = \"/Users/lauraschultz/Documents/projects/yelp-restaurant-chooser/client/src/UserNameModal.tsx\";\nimport React, { useState } from \"react\";\nimport socket from \"./socket\";\nimport { UserContextConsumer } from \"./UserDataContext\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\nimport ModalWelcomeHeader from \"./ModalWelcomeHeader\";\nimport { useClickOutsideListenerRef } from \"./useClickOutsideListenerRef\";\nexport const UserNameModal = ({\n  escape\n}) => {\n  let [currentUserName, setCurrentUserName] = useState(\"\");\n  let ref = useClickOutsideListenerRef(escape);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.createElement(ModalWelcomeHeader, {\n    escape: escape,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 7\n    }\n  }), /*#__PURE__*/React.createElement(UserContextConsumer, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 7\n    }\n  }, context => /*#__PURE__*/React.createElement(\"form\", {\n    ref: ref,\n    className: \"pb-3 px-4 rounded-b bg-white text-gray-700\",\n    onSubmit: e => {\n      e.preventDefault();\n\n      if (context.userId) {\n        socket.setUserName(context.sessionId, context.userId, currentUserName).then(response => {\n          console.log(`result of setting name: ${response}`);\n\n          if (response) {\n            context.setUserState(\"canVote\");\n          }\n        });\n      }\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    className: \"text-gray-600 text-sm py-1\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 13\n    }\n  }, \"Invited to \", context.creatorName, \"'s session\"), /*#__PURE__*/React.createElement(\"label\", {\n    className: \"block mx-3\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"span\", {\n    className: \"uppercase font-bold text-sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 17\n    }\n  }, \"Your name:\"), /*#__PURE__*/React.createElement(\"div\", {\n    className: \"py-1 px-2 rounded border border-gray-300 bg-white focus-within:border-theme-blue-l-2 w-max-content\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faUser,\n    className: \"mr-2\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 19\n    }\n  }), /*#__PURE__*/React.createElement(\"input\", {\n    className: \"px-2 focus:outline-none border-l\",\n    type: \"text\",\n    value: currentUserName,\n    onChange: e => setCurrentUserName(e.target.value),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 19\n    }\n  }))), /*#__PURE__*/React.createElement(\"button\", {\n    type: \"submit\",\n    className: \"py-1 uppercase tracking-wide text-sm text-white bg-theme-yellow hover:theme-dark-yellow w-full mt-4 rounded shadow font-bold\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }\n  }, \"join session\"))));\n};","map":{"version":3,"sources":["/Users/lauraschultz/Documents/projects/yelp-restaurant-chooser/client/src/UserNameModal.tsx"],"names":["React","useState","socket","UserContextConsumer","FontAwesomeIcon","faUser","ModalWelcomeHeader","useClickOutsideListenerRef","UserNameModal","escape","currentUserName","setCurrentUserName","ref","context","e","preventDefault","userId","setUserName","sessionId","then","response","console","log","setUserState","creatorName","target","value"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,UAAnB;AAEA,SAASC,mBAAT,QAAoC,mBAApC;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,SAASC,MAAT,QAAuB,mCAAvB;AACA,OAAOC,kBAAP,MAA+B,sBAA/B;AACA,SAASC,0BAAT,QAA2C,8BAA3C;AAEA,OAAO,MAAMC,aAA+C,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAgB;AAC7E,MAAI,CAACC,eAAD,EAAkBC,kBAAlB,IAAwCV,QAAQ,CAAC,EAAD,CAApD;AACD,MAAIW,GAAG,GAAGL,0BAA0B,CAACE,MAAD,CAApC;AAEC,sBACE,uDACE,oBAAC,kBAAD;AAAoB,IAAA,MAAM,EAAEA,MAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE,oBAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACII,OAAD,iBACC;AACA,IAAA,GAAG,EAAED,GADL;AAEE,IAAA,SAAS,EAAC,4CAFZ;AAGE,IAAA,QAAQ,EAAGE,CAAD,IAAkB;AAC1BA,MAAAA,CAAC,CAACC,cAAF;;AACA,UAAIF,OAAO,CAACG,MAAZ,EAAoB;AAClBd,QAAAA,MAAM,CACHe,WADH,CAEIJ,OAAO,CAACK,SAFZ,EAGIL,OAAO,CAACG,MAHZ,EAIIN,eAJJ,EAMGS,IANH,CAMSC,QAAD,IAAc;AAClBC,UAAAA,OAAO,CAACC,GAAR,CAAa,2BAA0BF,QAAS,EAAhD;;AACA,cAAIA,QAAJ,EAAc;AACZP,YAAAA,OAAO,CAACU,YAAR,CAAqB,SAArB;AACD;AACF,SAXH;AAYD;AACF,KAnBH;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAqBE;AAAK,IAAA,SAAS,EAAC,4BAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACcV,OAAO,CAACW,WADtB,eArBF,eAwBE;AAAO,IAAA,SAAS,EAAC,YAAjB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAEI;AAAM,IAAA,SAAS,EAAC,6BAAhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAFJ,eAKI;AAAK,IAAA,SAAS,EAAC,oGAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACE,oBAAC,eAAD;AAAiB,IAAA,IAAI,EAAEnB,MAAvB;AAA+B,IAAA,SAAS,EAAC,MAAzC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADF,eAEE;AACA,IAAA,SAAS,EAAC,kCADV;AAEA,IAAA,IAAI,EAAC,MAFL;AAGA,IAAA,KAAK,EAAEK,eAHP;AAIA,IAAA,QAAQ,EAAGI,CAAD,IAAOH,kBAAkB,CAACG,CAAC,CAACW,MAAF,CAASC,KAAV,CAJnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAFF,CALJ,CAxBF,eAwCE;AACE,IAAA,IAAI,EAAC,QADP;AAEE,IAAA,SAAS,EAAC,8HAFZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAxCF,CAFJ,CAFF,CADF;AAuED,CA3EM","sourcesContent":["import React, { useState, FormEvent } from \"react\";\nimport socket from \"./socket\";\n\nimport { UserContextConsumer } from \"./UserDataContext\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport { faUser } from \"@fortawesome/free-solid-svg-icons\";\nimport ModalWelcomeHeader from \"./ModalWelcomeHeader\";\nimport { useClickOutsideListenerRef } from \"./useClickOutsideListenerRef\";\n\nexport const UserNameModal: React.FC<{ escape: () => void }> = ({ escape }) => {\n  let [currentUserName, setCurrentUserName] = useState(\"\");\n let ref = useClickOutsideListenerRef(escape);\n\n  return (\n    <>\n      <ModalWelcomeHeader escape={escape} />\n      <UserContextConsumer>\n        {(context) => (\n          <form\n          ref={ref}\n            className=\"pb-3 px-4 rounded-b bg-white text-gray-700\"\n            onSubmit={(e: FormEvent) => {\n              e.preventDefault();\n              if (context.userId) {\n                socket\n                  .setUserName(\n                    context.sessionId,\n                    context.userId,\n                    currentUserName\n                  )\n                  .then((response) => {\n                    console.log(`result of setting name: ${response}`);\n                    if (response) {\n                      context.setUserState(\"canVote\");\n                    }\n                  });\n              }\n            }}\n          >\n            <div className=\"text-gray-600 text-sm py-1\">\n              Invited to {context.creatorName}'s session\n            </div>\n            <label className=\"block mx-3\">\n                {/* <FontAwesomeIcon icon={faUser} /> */}\n                <span className=\"uppercase font-bold text-sm\">\n                 Your name: \n                </span>\n                <div className=\"py-1 px-2 rounded border border-gray-300 bg-white focus-within:border-theme-blue-l-2 w-max-content\">\n                  <FontAwesomeIcon icon={faUser} className=\"mr-2\"/>\n                  <input\n                  className=\"px-2 focus:outline-none border-l\"\n                  type=\"text\"\n                  value={currentUserName}\n                  onChange={(e) => setCurrentUserName(e.target.value)}\n                />\n                </div>\n                \n              </label>\n            <button\n              type=\"submit\"\n              className=\"py-1 uppercase tracking-wide text-sm text-white bg-theme-yellow hover:theme-dark-yellow w-full mt-4 rounded shadow font-bold\"\n            >\n              join session\n            </button>\n            {/* <div className=\"flex justify-around\">\n              <button\n                type=\"button\"\n                onClick={escape}\n                className=\"py-1 px-2 uppercase tracking-wide text-sm text-gray-500 border border-gray-500 mt-4 rounded shadow font-bold flex-1\"\n              >\n                cancel\n              </button>\n              <button\n                type=\"submit\"\n                className=\"py-1 px-2 uppercase tracking-wide text-sm text-white bg-theme-yellow mt-4 rounded shadow font-bold flex-1\"\n              >\n                done\n              </button>\n            </div> */}\n          </form>\n        )}\n      </UserContextConsumer>\n    </>\n  );\n};\n"]},"metadata":{},"sourceType":"module"}