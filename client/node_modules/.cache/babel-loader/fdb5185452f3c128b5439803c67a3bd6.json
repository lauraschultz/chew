{"ast":null,"code":"import io from \"socket.io-client\";\nimport axios from \"axios\";\nimport { SERVER } from \"./config\";\nexport class Socket {\n  constructor() {\n    this.socket = void 0;\n\n    this.search = (sessionId, searchTerm, openHours, priceRange, services) => new Promise((resolve, reject) => axios.get(`${SERVER}/search/${sessionId}/${searchTerm}/${openHours}/${priceRange}/${services}`).then(result => resolve(result.data)));\n\n    this.setUserName = (sessionId, userId, userName) => new Promise((resolve, reject) => axios.post(`${SERVER}/setUserName/${sessionId}/${userId}/${userName}`).then(result => resolve(result.data)).catch(() => console.log(`error`)));\n\n    this.addVote = (sessionId, userId, restaurantId, voteNum) => new Promise((resolve, reject) => axios.post(`${SERVER}/addVote/${sessionId}/${userId}/${restaurantId}/${voteNum}`).then(result => resolve(result.data)));\n\n    this.addRestaurant = (sessionId, userId, restaurantId) => new Promise((resolve, reject) => axios.post(`${SERVER}/addRestaurant/${sessionId}/${userId}/${restaurantId}`).then(result => resolve(result.data)));\n\n    this.emit = (data, callback, title) => {\n      console.log(`socket emitting ${title} with data ${JSON.stringify(data)}`);\n      this.socket.emit(title, data, callback);\n    };\n\n    this.newSession = (data, callback) => {\n      this.emit(data, callback, \"newSession\");\n    };\n\n    this.tryJoinSession = (data, callback) => {\n      this.emit(data, callback, \"tryJoinSession\");\n    };\n\n    this.subscribeToVoteAdded = callback => {\n      this.socket.on(\"addedVote\", callback);\n    };\n\n    this.unSubscribeToVoteAdded = () => {\n      this.socket.off(\"addedVote\");\n    };\n\n    this.subscribeToRestaurantAdded = callback => {\n      this.socket.on(\"addedRestaurant\", callback);\n    };\n\n    this.unSubscribeToRestaurantAdded = () => {\n      this.socket.off(\"addedRestaurant\");\n    };\n\n    console.log(`running socket constructor.`);\n    this.socket = io.connect(SERVER);\n  }\n\n}\nlet socket = new Socket();\nconsole.log(\"here.\");\nexport default socket;","map":{"version":3,"sources":["/Users/lauraschultz/Documents/projects/yelp-restaurant-chooser/client/src/socket.ts"],"names":["io","axios","SERVER","Socket","constructor","socket","search","sessionId","searchTerm","openHours","priceRange","services","Promise","resolve","reject","get","then","result","data","setUserName","userId","userName","post","catch","console","log","addVote","restaurantId","voteNum","addRestaurant","emit","callback","title","JSON","stringify","newSession","tryJoinSession","subscribeToVoteAdded","on","unSubscribeToVoteAdded","off","subscribeToRestaurantAdded","unSubscribeToRestaurantAdded","connect"],"mappings":"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","sourcesContent":["import io from \"socket.io-client\";\nimport {\n  NewSessionData,\n  NewSessionCallback,\n  TryJoinSessionData,\n  TryJoinSessionCallback,\n  Business,\n} from \"../../shared/types\";\nimport axios from \"axios\";\nimport { SERVER } from \"./config\";\n\nexport class Socket {\n  socket: SocketIOClient.Socket;\n\n  constructor() {\n    console.log(`running socket constructor.`)\n    this.socket = io.connect(SERVER);\n  }\n\n  search = (sessionId: string, searchTerm: string, openHours:string, priceRange:string, services:string): Promise<Business[]> =>\n    new Promise((resolve, reject) =>\n      axios\n        .get(`${SERVER}/search/${sessionId}/${searchTerm}/${openHours}/${priceRange}/${services}`)\n        .then((result) => resolve(result.data))\n    );\n\n  setUserName = (\n    sessionId: string,\n    userId: string,\n    userName: string\n  ): Promise<boolean> =>\n    new Promise((resolve, reject) =>\n      axios\n        .post(`${SERVER}/setUserName/${sessionId}/${userId}/${userName}`)\n        .then((result) => resolve(result.data))\n        .catch(() => console.log(`error`))\n    );\n\n  addVote = (\n    sessionId: string,\n    userId: string,\n    restaurantId: string,\n    voteNum: number\n  ): Promise<boolean> =>\n    new Promise((resolve, reject) =>\n      axios\n        .post(\n          `${SERVER}/addVote/${sessionId}/${userId}/${restaurantId}/${voteNum}`\n        )\n        .then((result) => resolve(result.data))\n    );\n\n  addRestaurant = (\n    sessionId: string,\n    userId: string,\n    restaurantId: string\n  ): Promise<boolean> =>\n    new Promise((resolve, reject) =>\n      axios\n        .post(`${SERVER}/addRestaurant/${sessionId}/${userId}/${restaurantId}`)\n        .then((result) => resolve(result.data))\n    );\n\n  emit = (data: any, callback: (p: any) => void, title: string) => {\n    console.log(`socket emitting ${title} with data ${JSON.stringify(data)}`);\n    this.socket.emit(title, data, callback);\n  };\n\n  newSession: (data: NewSessionData, callback: NewSessionCallback) => void = (\n    data,\n    callback\n  ) => {\n    this.emit(data, callback, \"newSession\");\n  };\n\n  tryJoinSession: (\n    data: TryJoinSessionData,\n    callback: TryJoinSessionCallback\n  ) => void = (data, callback) => {\n    this.emit(data, callback, \"tryJoinSession\");\n  };\n\n  subscribeToVoteAdded = (callback: Function) => {\n    this.socket.on(\"addedVote\", callback);\n  };\n\n  unSubscribeToVoteAdded = () => {\n    this.socket.off(\"addedVote\")\n  }  \n\n  subscribeToRestaurantAdded = (callback: Function) => {\n    this.socket.on(\"addedRestaurant\", callback);\n  };\n\n  unSubscribeToRestaurantAdded = () => {\n    this.socket.off(\"addedRestaurant\")\n  }\n}\n\n\n\nlet socket = new Socket();\nconsole.log(\"here.\");\nexport default socket;\n"]},"metadata":{},"sourceType":"module"}