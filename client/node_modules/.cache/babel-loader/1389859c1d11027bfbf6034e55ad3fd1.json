{"ast":null,"code":"var _jsxFileName = \"/Users/lauraschultz/Documents/projects/yelp-restaurant-chooser/client/src/CopySessionUrl.tsx\";\nimport { faClipboard } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport React, { useRef, useState } from \"react\";\nimport { useLocation } from \"react-router-dom\";\n\nconst CopySessionUrl = ({\n  inputThemes,\n  buttonThemes,\n  buttonShadowColor\n}) => {\n  let appLoc = useLocation();\n  let copyTextRef = useRef(null);\n  let [copied, setCopied] = useState(false);\n  return /*#__PURE__*/React.createElement(\"div\", {\n    className: \"w-max-content text-sm\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 3\n    }\n  }, /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    ref: copyTextRef,\n    readOnly: true,\n    className: \"border rounded-l py-1 pl-2 w-32 overflow-hidden btn-focus \" + inputThemes,\n    value: window.location.href,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 4\n    }\n  }), /*#__PURE__*/React.createElement(\"button\", {\n    \"aria-label\": copied ? \"Copied!\" : \"Copy to clipboard\",\n    \"data-balloon-pos\": \"up\",\n    className: `rounded-r py-1 px-2 border btn-focus ${buttonThemes}`,\n    style: {\n      boxShadow: `${buttonShadowColor} -5px 0 8px`\n    },\n    onClick: e => {\n      var _copyTextRef$current;\n\n      (_copyTextRef$current = copyTextRef.current) === null || _copyTextRef$current === void 0 ? void 0 : _copyTextRef$current.select();\n      document.execCommand(\"copy\");\n      setCopied(true);\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 4\n    }\n  }, /*#__PURE__*/React.createElement(FontAwesomeIcon, {\n    icon: faClipboard,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 5\n    }\n  })));\n};\n\nexport default CopySessionUrl;","map":{"version":3,"sources":["/Users/lauraschultz/Documents/projects/yelp-restaurant-chooser/client/src/CopySessionUrl.tsx"],"names":["faClipboard","FontAwesomeIcon","React","useRef","useState","useLocation","CopySessionUrl","inputThemes","buttonThemes","buttonShadowColor","appLoc","copyTextRef","copied","setCopied","window","location","href","boxShadow","e","current","select","document","execCommand"],"mappings":";AAAA,SAASA,WAAT,QAA4B,mCAA5B;AACA,SAASC,eAAT,QAAgC,gCAAhC;AACA,OAAOC,KAAP,IAAgBC,MAAhB,EAAwBC,QAAxB,QAAwC,OAAxC;AACA,SAASC,WAAT,QAA4B,kBAA5B;;AAEA,MAAMC,cAIJ,GAAG,CAAC;AAAEC,EAAAA,WAAF;AAAeC,EAAAA,YAAf;AAA6BC,EAAAA;AAA7B,CAAD,KAAsD;AAC1D,MAAIC,MAAM,GAAGL,WAAW,EAAxB;AACA,MAAIM,WAAW,GAAGR,MAAM,CAAmB,IAAnB,CAAxB;AACA,MAAI,CAACS,MAAD,EAASC,SAAT,IAAsBT,QAAQ,CAAC,KAAD,CAAlC;AAEA,sBACC;AAAK,IAAA,SAAS,EAAC,uBAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBACC;AACC,IAAA,IAAI,EAAC,MADN;AAEC,IAAA,GAAG,EAAEO,WAFN;AAGC,IAAA,QAAQ,MAHT;AAIC,IAAA,SAAS,EACR,+DACAJ,WANF;AAQC,IAAA,KAAK,EAAEO,MAAM,CAACC,QAAP,CAAgBC,IARxB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IADD,eAWC;AACC,kBAAYJ,MAAM,GAAG,SAAH,GAAe,mBADlC;AAEC,wBAAiB,IAFlB;AAGC,IAAA,SAAS,EAAG,wCAAuCJ,YAAa,EAHjE;AAIC,IAAA,KAAK,EAAE;AACNS,MAAAA,SAAS,EAAG,GAAER,iBAAkB;AAD1B,KAJR;AAOC,IAAA,OAAO,EAAGS,CAAD,IAAO;AAAA;;AACf,8BAAAP,WAAW,CAACQ,OAAZ,8EAAqBC,MAArB;AACAC,MAAAA,QAAQ,CAACC,WAAT,CAAqB,MAArB;AACAT,MAAAA,SAAS,CAAC,IAAD,CAAT;AACA,KAXF;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,kBAaC,oBAAC,eAAD;AAAiB,IAAA,IAAI,EAAEb,WAAvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,IAbD,CAXD,CADD;AA6BA,CAtCD;;AAwCA,eAAeM,cAAf","sourcesContent":["import { faClipboard } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport React, { useRef, useState } from \"react\";\nimport { useLocation } from \"react-router-dom\";\n\nconst CopySessionUrl: React.FC<{\n\tinputThemes: string;\n\tbuttonThemes: string;\n\tbuttonShadowColor: string;\n}> = ({ inputThemes, buttonThemes, buttonShadowColor }) => {\n\tlet appLoc = useLocation();\n\tlet copyTextRef = useRef<HTMLInputElement>(null);\n\tlet [copied, setCopied] = useState(false);\n\n\treturn (\n\t\t<div className=\"w-max-content text-sm\">\n\t\t\t<input\n\t\t\t\ttype=\"text\"\n\t\t\t\tref={copyTextRef}\n\t\t\t\treadOnly\n\t\t\t\tclassName={\n\t\t\t\t\t\"border rounded-l py-1 pl-2 w-32 overflow-hidden btn-focus \" +\n\t\t\t\t\tinputThemes\n\t\t\t\t}\n\t\t\t\tvalue={window.location.href}\n\t\t\t/>\n\t\t\t<button\n\t\t\t\taria-label={copied ? \"Copied!\" : \"Copy to clipboard\"}\n\t\t\t\tdata-balloon-pos=\"up\"\n\t\t\t\tclassName={`rounded-r py-1 px-2 border btn-focus ${buttonThemes}`}\n\t\t\t\tstyle={{\n\t\t\t\t\tboxShadow: `${buttonShadowColor} -5px 0 8px`,\n\t\t\t\t}}\n\t\t\t\tonClick={(e) => {\n\t\t\t\t\tcopyTextRef.current?.select();\n\t\t\t\t\tdocument.execCommand(\"copy\");\n\t\t\t\t\tsetCopied(true);\n\t\t\t\t}}\n\t\t\t>\n\t\t\t\t<FontAwesomeIcon icon={faClipboard} />\n\t\t\t</button>\n\t\t</div>\n\t);\n};\n\nexport default CopySessionUrl;\n"]},"metadata":{},"sourceType":"module"}