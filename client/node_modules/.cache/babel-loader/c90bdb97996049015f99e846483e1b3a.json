{"ast":null,"code":"import _slicedToArray from\"/Users/lauraschultz/Documents/projects/yelp-restaurant-chooser/client/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import{faClipboard}from\"@fortawesome/free-solid-svg-icons\";import{FontAwesomeIcon}from\"@fortawesome/react-fontawesome\";import React,{useRef,useState}from\"react\";import{useLocation}from\"react-router-dom\";var CopySessionUrl=function CopySessionUrl(_ref){var inputThemes=_ref.inputThemes,buttonThemes=_ref.buttonThemes,buttonShadowColor=_ref.buttonShadowColor;var appLoc=useLocation();var copyTextRef=useRef(null);var _useState=useState(false),_useState2=_slicedToArray(_useState,2),copied=_useState2[0],setCopied=_useState2[1];return/*#__PURE__*/React.createElement(\"div\",{className:\"w-max-content text-sm\"},/*#__PURE__*/React.createElement(\"input\",{type:\"text\",ref:copyTextRef,readOnly:true,className:\"border rounded-l py-1 pl-2 w-32 overflow-hidden focus:outline-none \"+inputThemes,value:window.location.href}),/*#__PURE__*/React.createElement(\"button\",{\"aria-label\":copied?\"Copied!\":\"Copy to clipboard\",\"data-balloon-pos\":\"up\",className:\"rounded-r py-1 px-2 border \".concat(buttonThemes),style:{boxShadow:\"\".concat(buttonShadowColor,\" -5px 0 8px\")},onClick:function onClick(e){var _copyTextRef$current;(_copyTextRef$current=copyTextRef.current)===null||_copyTextRef$current===void 0?void 0:_copyTextRef$current.select();document.execCommand(\"copy\");setCopied(true);}},/*#__PURE__*/React.createElement(FontAwesomeIcon,{icon:faClipboard})));};export default CopySessionUrl;","map":{"version":3,"sources":["/Users/lauraschultz/Documents/projects/yelp-restaurant-chooser/client/src/CopySessionUrl.tsx"],"names":["faClipboard","FontAwesomeIcon","React","useRef","useState","useLocation","CopySessionUrl","inputThemes","buttonThemes","buttonShadowColor","appLoc","copyTextRef","copied","setCopied","window","location","href","boxShadow","e","current","select","document","execCommand"],"mappings":"4LAAA,OAASA,WAAT,KAA4B,mCAA5B,CACA,OAASC,eAAT,KAAgC,gCAAhC,CACA,MAAOC,CAAAA,KAAP,EAAgBC,MAAhB,CAAwBC,QAAxB,KAAwC,OAAxC,CACA,OAASC,WAAT,KAA4B,kBAA5B,CAEA,GAAMC,CAAAA,cAA8F,CACpG,QADMA,CAAAA,cACN,MAAoD,IAAlDC,CAAAA,WAAkD,MAAlDA,WAAkD,CAArCC,YAAqC,MAArCA,YAAqC,CAAvBC,iBAAuB,MAAvBA,iBAAuB,CAChD,GAAIC,CAAAA,MAAM,CAAGL,WAAW,EAAxB,CACF,GAAIM,CAAAA,WAAW,CAAGR,MAAM,CAAmB,IAAnB,CAAxB,CAFkD,cAGxBC,QAAQ,CAAC,KAAD,CAHgB,wCAG7CQ,MAH6C,eAGrCC,SAHqC,eAKhD,mBAAO,2BAAK,SAAS,CAAC,uBAAf,eACP,6BACE,IAAI,CAAC,MADP,CAEE,GAAG,CAAEF,WAFP,CAGE,QAAQ,KAHV,CAIE,SAAS,CAAE,sEAAwEJ,WAJrF,CAKE,KAAK,CAAEO,MAAM,CAACC,QAAP,CAAgBC,IALzB,EADO,cAQP,8BACA,aAAYJ,MAAM,CAAE,SAAF,CAAc,mBADhC,CAEA,mBAAiB,IAFjB,CAGE,SAAS,sCAAgCJ,YAAhC,CAHX,CAIE,KAAK,CAAE,CACHS,SAAS,WAAKR,iBAAL,eADN,CAJT,CAOE,OAAO,CAAE,iBAACS,CAAD,CAAO,0BACd,sBAAAP,WAAW,CAACQ,OAAZ,oEAAqBC,MAArB,GACAC,QAAQ,CAACC,WAAT,CAAqB,MAArB,EACAT,SAAS,CAAC,IAAD,CAAT,CACD,CAXH,eAaE,oBAAC,eAAD,EAAiB,IAAI,CAAEb,WAAvB,EAbF,CARO,CAAP,CAwBH,CA9BD,CAgCA,cAAeM,CAAAA,cAAf","sourcesContent":["import { faClipboard } from \"@fortawesome/free-solid-svg-icons\";\nimport { FontAwesomeIcon } from \"@fortawesome/react-fontawesome\";\nimport React, { useRef, useState } from \"react\";\nimport { useLocation } from \"react-router-dom\";\n\nconst CopySessionUrl:React.FC<{inputThemes: string, buttonThemes:string, buttonShadowColor: string}> =\n({inputThemes, buttonThemes, buttonShadowColor}) => {\n    let appLoc = useLocation();\n  let copyTextRef = useRef<HTMLInputElement>(null);\n  let [copied, setCopied] = useState(false)\n  \n    return <div className=\"w-max-content text-sm\">\n    <input\n      type=\"text\"\n      ref={copyTextRef}\n      readOnly\n      className={\"border rounded-l py-1 pl-2 w-32 overflow-hidden focus:outline-none \" + inputThemes}\n      value={window.location.href}\n    />\n    <button\n    aria-label={copied? \"Copied!\" : \"Copy to clipboard\"}\n    data-balloon-pos=\"up\"\n      className={`rounded-r py-1 px-2 border ${buttonThemes}`}\n      style={{\n          boxShadow: `${buttonShadowColor} -5px 0 8px`\n      }}\n      onClick={(e) => {\n        copyTextRef.current?.select();\n        document.execCommand(\"copy\");\n        setCopied(true)\n      }}\n    >\n      <FontAwesomeIcon icon={faClipboard} />\n    </button>\n  </div>\n}\n\nexport default CopySessionUrl;"]},"metadata":{},"sourceType":"module"}